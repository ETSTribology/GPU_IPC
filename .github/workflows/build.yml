name: Build GPU IPC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        os: [ubuntu-20.04]
        sub_packages: ["cuda-nvcc", "cuda-libraries-dev", "cuda-libraries"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.18
        if: ${{ !startsWith(matrix.os, 'macos') }}
        with:
          cuda: '12.5.1'
          method: 'network'
          sub-packages: ${{ matrix.sub_packages }}
          non-cuda-sub-packages: '[]'

      - name: Install CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "3.26.0"

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          vcpkgGitCommitId: 055721089e8037d4d617250814d11f881e557549

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libeigen3-dev libglew-dev freeglut3-dev libx11-dev

      - name: Install ccache
        run: |
          sudo apt-get install -y ccache
          echo 'export PATH="/usr/lib/ccache:$PATH"' >> $GITHUB_ENV

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCUDA_ARCHITECTURES="86" -DUSE_CCACHE=ON

      - name: Build with CMake
        run: |
          cd build
          make -j$(nproc)

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
